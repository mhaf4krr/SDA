{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { Divider, Container, Table, Header } from \"semantic-ui-react\";\nimport { backend, main_backend_path } from \"../../constants/constants\";\nimport PageContainer from \"../../components/PageContainer/PageContainer\";\nexport default function BOCAMinutes(props) {\n  return /*#__PURE__*/_jsxs(PageContainer, {\n    children: [/*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(Header, {\n      children: \"BOCA Minutes\"\n    }), /*#__PURE__*/_jsxs(Table, {\n      celled: true,\n      unstackable: true,\n      children: [/*#__PURE__*/_jsx(Table.Header, {\n        children: /*#__PURE__*/_jsxs(Table.Row, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsx(Table.HeaderCell, {\n            width: 1,\n            children: \"S.No\"\n          }), /*#__PURE__*/_jsx(Table.HeaderCell, {\n            width: 3,\n            children: \"Dated\"\n          }), /*#__PURE__*/_jsx(Table.HeaderCell, {\n            children: \"Title of Download File\"\n          })]\n        })\n      }), console.log(props.data), /*#__PURE__*/_jsx(Table.Body, {\n        children: props.data.map((item, index) => {\n          return /*#__PURE__*/_jsxs(Table.Row, {\n            textAlign: \"center\",\n            children: [/*#__PURE__*/_jsx(Table.Cell, {\n              children: index + 1\n            }), /*#__PURE__*/_jsx(Table.Cell, {\n              children: new Date(item[\"date\"]).toLocaleDateString()\n            }), /*#__PURE__*/_jsx(Table.Cell, {\n              children: /*#__PURE__*/_jsx(\"a\", {\n                target: \"_blank\",\n                href: main_backend_path + item[\"file\"][\"url\"],\n                children: item[\"title\"]\n              })\n            })]\n          });\n        })\n      })]\n    })]\n  });\n}\nexport async function getServerSideProps(context) {\n  try {\n    let result = await fetch(backend + \"boca-minutes\");\n    let data = await result.json();\n    console.log(data);\n    return {\n      props: {\n        data: data\n      }\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      props: {}\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}