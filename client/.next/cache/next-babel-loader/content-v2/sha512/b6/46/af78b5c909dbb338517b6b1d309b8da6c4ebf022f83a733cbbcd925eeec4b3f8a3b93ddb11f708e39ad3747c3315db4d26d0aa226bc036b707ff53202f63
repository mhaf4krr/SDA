{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hyder/Desktop/SDA/client/pages/gallery/[gallery_id].js\";\nimport React from 'react';\nimport ImageGallery from 'react-image-gallery';\nimport \"react-image-gallery/styles/css/image-gallery.css\";\nimport { Container, Divider, Header } from 'semantic-ui-react';\nimport { backend, main_backend_path } from '../../constants/constants';\nconst images = [{\n  original: 'https://picsum.photos/id/1018/1000/600/',\n  thumbnail: 'https://picsum.photos/id/1018/250/150/'\n}, {\n  original: 'https://picsum.photos/id/1015/1000/600/',\n  thumbnail: 'https://picsum.photos/id/1015/250/150/'\n}, {\n  original: 'https://picsum.photos/id/1019/1000/600/',\n  thumbnail: 'https://picsum.photos/id/1019/250/150/'\n}];\nexport default function ImageViewer(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"3rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Image Gallery \", props.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n      items: props[\"data\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\nexport async function getServerSideProps(context) {\n  let {\n    params,\n    res\n  } = context;\n  let gallery_id = params[\"gallery_id\"];\n  let response = await (await fetch(backend + \"gallery-photos/\" + gallery_id)).json();\n  let data = response[\"images\"].map(image => {\n    return {\n      original: main_backend_path + image[\"url\"],\n      thumbnail: main_backend_path + image[\"formats\"][\"thumbnail\"][\"url\"]\n    };\n  });\n  return {\n    props: {\n      data,\n      title: response[\"title\"]\n    }\n  };\n}","map":{"version":3,"sources":["/home/hyder/Desktop/SDA/client/pages/gallery/[gallery_id].js"],"names":["React","ImageGallery","Container","Divider","Header","backend","main_backend_path","images","original","thumbnail","ImageViewer","props","marginTop","title","getServerSideProps","context","params","res","gallery_id","response","fetch","json","data","map","image"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAO,kDAAP;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,MAA7B,QAA2C,mBAA3C;AACA,SAASC,OAAT,EAAkBC,iBAAlB,QAA2C,2BAA3C;AAEA,MAAMC,MAAM,GAAG,CACX;AACEC,EAAAA,QAAQ,EAAE,yCADZ;AAEEC,EAAAA,SAAS,EAAE;AAFb,CADW,EAKX;AACED,EAAAA,QAAQ,EAAE,yCADZ;AAEEC,EAAAA,SAAS,EAAE;AAFb,CALW,EASX;AACED,EAAAA,QAAQ,EAAE,yCADZ;AAEEC,EAAAA,SAAS,EAAE;AAFb,CATW,CAAf;AAeA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAC;AAAX,KAAlB;AAAA,4BACI,QAAC,MAAD;AAAA,mCACmBD,KAAK,CAACE,KADzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEF,KAAK,CAAC,MAAD;AAA1B;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;AAGD,OAAO,eAAeG,kBAAf,CAAkCC,OAAlC,EAA0C;AAC7C,MAAI;AAACC,IAAAA,MAAD;AAAQC,IAAAA;AAAR,MAAeF,OAAnB;AAEA,MAAIG,UAAU,GAAGF,MAAM,CAAC,YAAD,CAAvB;AAEA,MAAIG,QAAQ,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACf,OAAO,GAAC,iBAAR,GAA0Ba,UAA3B,CAAZ,EAAoDG,IAApD,EAArB;AAGA,MAAIC,IAAI,GAAGH,QAAQ,CAAC,QAAD,CAAR,CAAmBI,GAAnB,CAAwBC,KAAD,IAAS;AACvC,WAAM;AACFhB,MAAAA,QAAQ,EAACF,iBAAiB,GAACkB,KAAK,CAAC,KAAD,CAD9B;AAEFf,MAAAA,SAAS,EAACH,iBAAiB,GAACkB,KAAK,CAAC,SAAD,CAAL,CAAiB,WAAjB,EAA8B,KAA9B;AAF1B,KAAN;AAIH,GALU,CAAX;AAMA,SAAO;AACHb,IAAAA,KAAK,EAAC;AACHW,MAAAA,IADG;AAEHT,MAAAA,KAAK,EAACM,QAAQ,CAAC,OAAD;AAFX;AADH,GAAP;AAMH","sourcesContent":["import React from 'react'\n\nimport ImageGallery from 'react-image-gallery';\n\nimport \"react-image-gallery/styles/css/image-gallery.css\"\nimport { Container, Divider, Header } from 'semantic-ui-react';\nimport { backend, main_backend_path } from '../../constants/constants';\n\nconst images = [\n    {\n      original: 'https://picsum.photos/id/1018/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1018/250/150/',\n    },\n    {\n      original: 'https://picsum.photos/id/1015/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1015/250/150/',\n    },\n    {\n      original: 'https://picsum.photos/id/1019/1000/600/',\n      thumbnail: 'https://picsum.photos/id/1019/250/150/',\n    },\n  ];\n\nexport default function ImageViewer(props) {\n    return (\n        <Container style={{marginTop:\"3rem\"}}>\n            <Header>\n                Image Gallery {props.title}\n            </Header>\n            <Divider/>\n            <ImageGallery items={props[\"data\"]} />\n        </Container>\n    )\n}\n\n\nexport async function getServerSideProps(context){\n    let {params,res} = context\n\n    let gallery_id = params[\"gallery_id\"]\n\n    let response = await (await fetch(backend+\"gallery-photos/\"+gallery_id)).json()\n\n\n    let data = response[\"images\"].map((image)=>{\n        return{\n            original:main_backend_path+image[\"url\"],\n            thumbnail:main_backend_path+image[\"formats\"][\"thumbnail\"][\"url\"]\n        }\n    })\n    return {\n        props:{\n           data,\n           title:response[\"title\"]\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}